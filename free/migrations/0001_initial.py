# Generated by Django 4.1.2 on 2023-01-09 16:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Apparatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=64, verbose_name='Location')),
                ('location_en', models.CharField(max_length=64, null=True, verbose_name='Location')),
                ('location_pt', models.CharField(max_length=64, null=True, verbose_name='Location')),
                ('location_es', models.CharField(max_length=64, null=True, verbose_name='Location')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('description_pt', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('secret', models.CharField(max_length=32, verbose_name='Secret')),
                ('owner', models.CharField(max_length=32, verbose_name='Owner')),
                ('timeout', models.IntegerField(default=60, verbose_name='Connection timeout')),
                ('config', models.JSONField(blank=True, default=dict, verbose_name='Configuration')),
                ('video_config', models.JSONField(blank=True, null=True, verbose_name='Video configuration')),
                ('last_online', models.DateTimeField(auto_now=True, verbose_name='Last ping')),
                ('image', models.ImageField(default='apparatus/missing_image.jpg', upload_to='apparatus/')),
            ],
            options={
                'verbose_name': 'Apparatus',
                'verbose_name_plural': 'Apparatuses',
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='ApparatusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('name_en', models.CharField(max_length=64, null=True, verbose_name='Name')),
                ('name_pt', models.CharField(max_length=64, null=True, verbose_name='Name')),
                ('name_es', models.CharField(max_length=64, null=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=64, verbose_name='Slug name')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('description_pt', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('scientific_area', models.CharField(max_length=64, verbose_name='Scientific area')),
                ('scientific_area_en', models.CharField(max_length=64, null=True, verbose_name='Scientific area')),
                ('scientific_area_pt', models.CharField(max_length=64, null=True, verbose_name='Scientific area')),
                ('scientific_area_es', models.CharField(max_length=64, null=True, verbose_name='Scientific area')),
                ('lab_type', models.CharField(max_length=32, verbose_name='Lab type')),
                ('lab_type_en', models.CharField(max_length=32, null=True, verbose_name='Lab type')),
                ('lab_type_pt', models.CharField(max_length=32, null=True, verbose_name='Lab type')),
                ('lab_type_es', models.CharField(max_length=32, null=True, verbose_name='Lab type')),
            ],
            options={
                'verbose_name': 'Apparatus type',
                'verbose_name_plural': 'Apparatus types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=128)),
                ('config', models.JSONField(blank=True, default=dict, verbose_name='Configuration')),
                ('status', models.CharField(choices=[('N', 'New'), ('C', 'Configured'), ('Q', 'In queue'), ('R', 'Running'), ('E', 'Error'), ('F', 'Finished'), ('A', 'Aborted'), ('T', 'Timeout')], max_length=1, verbose_name='Status')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('queue_time', models.DateTimeField(blank=True, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('apparatus', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='free.apparatus')),
            ],
            options={
                'verbose_name': 'Execution',
                'verbose_name_plural': 'Executions',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('s', 'Student'), ('t', 'Teacher'), ('a', 'Administrator')], max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='Time')),
                ('result_type', models.CharField(choices=[('p', 'Partial'), ('f', 'Final')], max_length=1, verbose_name='Result type')),
                ('value', models.JSONField(blank=True, default=dict, verbose_name='Value')),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='free.execution')),
            ],
            options={
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('name_en', models.CharField(max_length=64, null=True)),
                ('name_pt', models.CharField(max_length=64, null=True)),
                ('name_es', models.CharField(max_length=64, null=True)),
                ('config', models.JSONField(blank=True, default=dict, verbose_name='Configuration')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('description_pt', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('description_es', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('apparatus_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='free.apparatustype')),
            ],
            options={
                'verbose_name': 'Protocol',
                'verbose_name_plural': 'Protocols',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='execution',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='free.protocol'),
        ),
        migrations.AddField(
            model_name='execution',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='apparatus',
            name='apparatus_type',
            field=models.ForeignKey(help_text='After setting/changing the apparatus_type, press "Save and continue editing" to see the list of protocols.', on_delete=django.db.models.deletion.PROTECT, to='free.apparatustype'),
        ),
        migrations.AddField(
            model_name='apparatus',
            name='protocols',
            field=models.ManyToManyField(blank=True, to='free.protocol'),
        ),
    ]
